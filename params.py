import argparse

def parse_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument("--data_path", type=str, required=True)
    parser.add_argument("--image_size", type=int, required=True)
    parser.add_argument("--n_epoch", type=int, required=True)
    parser.add_argument("--n_T", type=int, required=True)
    parser.add_argument("--batch_size", type=int, required=True)

    parser.add_argument("--norm", type=str, default="")
    parser.add_argument("--st", type=int, default=100)
    parser.add_argument("--num_classes", type=int, default=1)
    parser.add_argument("--num_channels", type=int, default=128)
    parser.add_argument("--num_res_blocks", type=int, default=2)
    parser.add_argument("--channel_mult", type=str, default="")
    parser.add_argument("--learn_sigma", action="store_true", default=False)
    parser.add_argument("--class_cond", action="store_true", default=True)
    parser.add_argument("--use_checkpoint", action="store_true",default=False)
    parser.add_argument("--attention_resolutions", type=str, default="16,8")
    parser.add_argument("--num_heads", type=int, default=4)
    parser.add_argument("--num_head_channels", type=int, default=-1)
    parser.add_argument("--num_heads_upsample", type=int, default=-1)
    parser.add_argument("--use_scale_shift_norm", action="store_true", default=False)
    parser.add_argument("--dropout", type=float, default=0.0)
    parser.add_argument("--resblock_updown", action="store_true", default=True)
    parser.add_argument("--use_fp16", action="store_true", default=False)
    parser.add_argument("--use_new_attention_order", action="store_true", default=False)
    parser.add_argument("--no_instance", action="store_true", default=True)
    parser.add_argument("--loss_decay", type=float, default=0.95)
    parser.add_argument("--lrate", type=float, default=1e-4)
    parser.add_argument("--beta1", type=float, default=1e-4)
    parser.add_argument("--beta2", type=float, default=0.02)
    parser.add_argument("--dp", type=float, default=0.1)

    return parser.parse_args()
